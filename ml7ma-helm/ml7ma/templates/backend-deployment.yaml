apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.backend.name }}
  labels:
    app: {{ .Release.Name }}-{{ .Values.backend.name }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.backend.name }}
    spec:
      initContainers:
        - name: run-migrations
          image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
          command: ["sh", "-c"]
          args:
            - |
              python manage.py migrate --no-input && \
              python manage.py createcachetable
          envFrom:
            - secretRef:
                name: mysql-secret
      containers:
        - name: {{ .Release.Name }}-{{ .Values.backend.name }}
          image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.service.targetPort }}
          envFrom:
            - secretRef:
                name: mysql-secret